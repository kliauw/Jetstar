import pandas as pd
import boto3



s3r = boto3.resource('s3')
s3c = boto3.client('s3')
source_bucket = s3r.Bucket("jq-ada-dev-dst-responsys")
dest_bucket = "test-jq-ada-dev-marketing"




###################################################
# Create Sent Emails by campaign dataframe
####################################################

for object_summary in source_bucket.objects.filter(Prefix="group/v1/sent/2019/01/01"):
    location = 's3://{}/{}'.format('jq-ada-dev-dst-responsys', object_summary.key)
    sent_df = pd.read_csv(location, compression='gzip', header=0, sep=',', quotechar='"')
    sent_df = sent_df.groupby('CAMPAIGN_ID')['CAMPAIGN_ID'].count().reset_index(name='emails sent').reindex(columns=['CAMPAIGN_ID', 'emails sent'])
    sent_df['CAMPAIGN_ID'] = sent_df['CAMPAIGN_ID'].astype(str)
    #folder = list(df.CAMPAIGN_ID)
    last_slash = object_summary.key.rfind('/')
    folder = object_summary.key[:last_slash+1]
    print(folder)
    s3_url = 's3://' + dest_bucket + '/' + object_summary.key
    s3_file = object_summary.key[last_slash+1:]

# ##############################
# # Create keys in S3 bucket
# ##############################
#
#     s3c.put_object(Bucket='test-jq-ada-dev-marketing', Key=(folder))
#     #sent_df.to_csv(s3_url , index=False,compression='gzip')
#
#
#     sent_df.to_csv(s3_file, index=False, compression='gzip')
#     #s3c.upload_file(s3_file, 'test-jq-ada-dev-marketing',object_summary.key)
#
# ###################################################
# # Create Bounces by campaign dataframe
# ####################################################
#
# for object_summary in source_bucket.objects.filter(Prefix="group/v1/bounce/2019/01/01"):
#     location = 's3://{}/{}'.format('jq-ada-dev-dst-responsys', object_summary.key)
#     bounce_df = pd.read_csv(location, compression='gzip', header=0, sep=',', quotechar='"')
#     bounce_df = bounce_df.groupby('CAMPAIGN_ID')['CAMPAIGN_ID'].count().reset_index(name='bounces').reindex(columns=['CAMPAIGN_ID', 'bounces'])
#     bounce_df['CAMPAIGN_ID'] = bounce_df['CAMPAIGN_ID'].astype(str)
#     # folder = list(df.CAMPAIGN_ID)
#     last_slash = object_summary.key.rfind('/')
#     folder = object_summary.key[:last_slash + 1]
#     s3_url = 's3://' + dest_bucket + '/' + object_summary.key
#     s3_file = object_summary.key[last_slash + 1:]
#
#     ##############################
#     # Create keys in S3 bucket
#     ##############################
#
#     s3c.put_object(Bucket='test-jq-ada-dev-marketing', Key=(folder))
#     # bounce_df.to_csv(s3_url , index=False,compression='gzip')
#
#     bounce_df.to_csv(s3_file, index=False, compression='gzip')
#     # s3c.upload_file(s3_file, 'test-jq-ada-dev-marketing',object_summary.key)
#
# ###################################################
# # Create Clicks by campaign dataframe
# ####################################################
#
# for object_summary in source_bucket.objects.filter(Prefix="group/v1/click/2019/01/01"):
#     location = 's3://{}/{}'.format('jq-ada-dev-dst-responsys', object_summary.key)
#     click_df = pd.read_csv(location, compression='gzip', header=0, sep=',', quotechar='"')
#     click_df = click_df.groupby('CAMPAIGN_ID')['CAMPAIGN_ID'].count().reset_index(name='clicks').reindex(columns=['CAMPAIGN_ID', 'clicks'])
#     click_df['CAMPAIGN_ID'] = click_df['CAMPAIGN_ID'].astype(str)
#     # folder = list(df.CAMPAIGN_ID)
#     last_slash = object_summary.key.rfind('/')
#     folder = object_summary.key[:last_slash + 1]
#     s3_url = 's3://' + dest_bucket + '/' + object_summary.key
#     s3_file = object_summary.key[last_slash + 1:]
#
#     ##############################
#     # Create keys in S3 bucket
#     ##############################
#
#     s3c.put_object(Bucket='test-jq-ada-dev-marketing', Key=(folder))
#     # click_df.to_csv(s3_url , index=False,compression='gzip')
#
#     click_df.to_csv(s3_file, index=False, compression='gzip')
#     # s3c.upload_file(s3_file, 'test-jq-ada-dev-marketing',object_summary.key)
#
#     ###################################################
#     # Create Opens by campaign dataframe
#     ####################################################
#
#     for object_summary in source_bucket.objects.filter(Prefix="group/v1/open/2019/01/01"):
#         location = 's3://{}/{}'.format('jq-ada-dev-dst-responsys', object_summary.key)
#         opens_df = pd.read_csv(location, compression='gzip', header=0, sep=',', quotechar='"')
#         opens_df = opens_df.groupby('CAMPAIGN_ID')['CAMPAIGN_ID'].count().reset_index(name='opens').reindex(columns=['CAMPAIGN_ID', 'opens'])
#         opens_df['CAMPAIGN_ID'] = opens_df['CAMPAIGN_ID'].astype(str)
#         # folder = list(df.CAMPAIGN_ID)
#         last_slash = object_summary.key.rfind('/')
#         folder = object_summary.key[:last_slash + 1]
#         s3_url = 's3://' + dest_bucket + '/' + object_summary.key
#         s3_file = object_summary.key[last_slash + 1:]
#
#         ##############################
#         # Create keys in S3 bucket
#         ##############################
#
#         s3c.put_object(Bucket='test-jq-ada-dev-marketing', Key=(folder))
#         # opens_df.to_csv(s3_url , index=False,compression='gzip')
#
#         opens_df.to_csv(s3_file, index=False, compression='gzip')
#         # s3c.upload_file(s3_file, 'test-jq-ada-dev-marketing',object_summary.key)
#
# sent_clicks_df = pd.merge(sent_df, click_df, on='CAMPAIGN_ID', how='outer')
# sent_clicks_opens_df = pd.merge(sent_clicks_df, opens_df, on='CAMPAIGN_ID', how='outer')
# sent_clicks_opens_df.to_csv('merged.csv' , index=False)
